
    Welcome to EndBASIC X.Y.Z.

    Type HELP for interactive usage information.
    Type LOAD "DEMO:TOUR.BAS": RUN for a guided tour.

Output from HELP:

    EndBASIC X.Y.Z
    Copyright 2020 Julio Merino

    Project page at <https://github.com/jmmv/endbasic>
    License Apache Version 2.0 <http://www.apache.org/licenses/LICENSE-2.0>

    >> Console manipulation <<
    CLS          Clears the screen.
    COLOR        Sets the foreground and background colors.
    INPUT        Obtains user input from the console.
    LOCATE       Moves the cursor to the given position.
    PRINT        Prints a message to the console.

    >> Interpreter manipulation <<
    CLEAR        Clears all variables to restore initial state.
    EXIT         Exits the interpreter.
    HELP         Prints interactive help.

    >> Numerical manipulation <<
    DTOI%        Rounds the given double to the closest integer.
    ITOD#        Converts the given integer to a double.
    RANDOMIZE    Reinitializes the pseudo-random number generator.
    RND#         Returns a random number in the [0..1] range.

    >> Stored program manipulation <<
    DEL          Deletes the given program.
    DIR          Displays the list of files on disk.
    EDIT         Interactively edits the stored program.
    LOAD         Loads the given program.
    NEW          Clears the stored program from memory.
    RUN          Runs the stored program.
    SAVE         Saves the current program in memory to the given filename.

    >> String manipulation <<
    LEFT$        Returns a given number of characters from the left side of a string.
    LEN%         Returns the length of the string in expr$.
    LTRIM$       Returns a copy of a string with leading whitespace removed.
    MID$         Returns a portion of a string.
    RIGHT$       Returns a given number of characters from the right side of a string.
    RTRIM$       Returns a copy of a string with trailing whitespace removed.

    Type HELP followed by a command or function name for details.
    Type HELP LANG for a quick reference guide about the language.

Output from HELP LANG:

    Symbols (variable and function references):
        name?    Boolean (TRUE and FALSE).
        name%    Integer (32 bits).
        name$    String.
        name     Type determined by value or definition.

    Assignments:
        varref = expr

    Expressions:
        a + b      a - b       a * b     a / b      a MOD b    -a
        a AND b    NOT a       a OR b    a XOR b
        a = b      a <> b      a < b     a <= b     a > b      a >= b
        (a)        varref      funcref(a1[, ..., aN])

    Flow control:
        IF expr THEN: ...: ELSE IF expr THEN: ...: ELSE: ...: END IF
        FOR varref = expr TO expr [STEP int]: ...: NEXT
        WHILE expr: ...: END WHILE

    Misc:
        st1: st2    Separates statements (same as a newline).
        REM text    Comment until end of line.
        ' text      Comment until end of line.
        ,           Long separator for arguments to builtin call.
        ;           Short separator for arguments to builtin call.

Output from HELP CLEAR:

    CLEAR

    Clears all variables to restore initial state.

Output from HELP CLS:

    CLS

    Clears the screen.

Output from HELP COLOR:

    COLOR [fg%][, [bg%]]

    Sets the foreground and background colors.

    Color numbers are given as ANSI numbers and can be between 0 and 255.  If a color number is not specified, then the color is reset to the console's default.  The console default does not necessarily match any other color specifiable in the 0 to 255 range, as it might be transparent.

Output from HELP DEL:

    DEL filename

    Deletes the given program.

    The filename must be a string and must be a basename (no directory components).  The .BAS extension is optional, but if present, it must be .BAS.

Output from HELP DIR:

    DIR

    Displays the list of files on disk.

Output from HELP EDIT:

    EDIT

    Interactively edits the stored program.

Output from HELP EXIT:

    EXIT [code%]

    Exits the interpreter.

    The optional code indicates the return value to return to the system.

Output from HELP HELP:

    HELP [topic]

    Prints interactive help.

    Without arguments, shows a summary of all available help topics.

    With a single argument, shows detailed information about the given help topic, command, or function.

Output from HELP INPUT:

    INPUT ["prompt"] <;|,> variableref

    Obtains user input from the console.

    The first expression to this function must be empty or evaluate to a string, and specifies the prompt to print.  If this first argument is followed by the short `;` separator, the prompt is extended with a question mark.

    The second expression to this function must be a bare variable reference and indicates the variable to update with the obtained input.

Output from HELP LOAD:

    LOAD filename

    Loads the given program.

    The filename must be a string and must be a basename (no directory components).  The .BAS extension is optional, but if present, it must be .BAS.

Output from HELP LOCATE:

    LOCATE row%, column%

    Moves the cursor to the given position.

Output from HELP NEW:

    NEW

    Clears the stored program from memory.

Output from HELP PRINT:

    PRINT [expr1 [<;|,> .. exprN]]

    Prints a message to the console.

    The expressions given as arguments are all evaluated and converted to strings.  Arguments separated by the short `;` separator are concatenated with a single space, while arguments separated by the long `,` separator are concatenated with a tab character.

Output from HELP RANDOMIZE:

    RANDOMIZE [seed%]

    Reinitializes the pseudo-random number generator.

    If no seed is given, uses system entropy to create a new sequence of random numbers.

    WARNING: These random numbers offer no cryptographic guarantees.

Output from HELP RUN:

    RUN

    Runs the stored program.

    Note that the program runs in the context of the interpreter so it will pick up any variables and other state that may already be set.

Output from HELP SAVE:

    SAVE filename

    Saves the current program in memory to the given filename.

    The filename must be a string and must be a basename (no directory components).  The .BAS extension is optional, but if present, it must be .BAS.

Output from HELP DTOI:

    DTOI%(expr#)

    Rounds the given double to the closest integer.

    If the value is too small or too big to fit in the integer's range, returns the smallest or biggest possible integer that fits, respectively.

Output from HELP ITOD:

    ITOD#(expr%)

    Converts the given integer to a double.

Output from HELP LEFT:

    LEFT$(expr$, n%)

    Returns a given number of characters from the left side of a string.

    If n% is 0, returns an empty string.

    If n% is greater than or equal to the number of characters in expr$, returns expr$.

Output from HELP LEN:

    LEN%(expr$)

    Returns the length of the string in expr$.

Output from HELP LTRIM:

    LTRIM$(expr$)

    Returns a copy of a string with leading whitespace removed.

Output from HELP MID:

    MID$(expr$, start%[, length%])

    Returns a portion of a string.

    start% indicates the starting position of the substring to extract and it is 1-indexed.

    length% indicates the number of characters to extract and, if not specified, defaults to extracting

    until the end of the string.

Output from HELP RIGHT:

    RIGHT$(expr$, n%)

    Returns a given number of characters from the right side of a string.

    If n% is 0, returns an empty string.

    If n% is greater than or equal to the number of characters in expr$, returns expr$.

Output from HELP RND:

    RND#(n%)

    Returns a random number in the [0..1] range.

    If n% is zero, returns the previously generated random number.  If n% is positive, returns a new random number.

    If you need to generate an integer random number within a specific range, say [0..100], compute it with an expression like DTOI%(RND#(1) * 100.0).

    WARNING: These random numbers offer no cryptographic guarantees.

Output from HELP RTRIM:

    RTRIM$(expr$)

    Returns a copy of a string with trailing whitespace removed.

End of input by CTRL-D
